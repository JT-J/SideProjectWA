@page "/login"
@using System.ComponentModel.DataAnnotations;
@using SideProjectWA.Models;
@using SideProjectWA.Services;
@inject SideProjectWA.Services.IUserService UserService;
@using Microsoft.EntityFrameworkCore.Infrastructure;
@using Microsoft.EntityFrameworkCore;
@inject IDbContextFactory<UserContext> DbContextFactory;
@inject IUserService UserService;
@inject NavigationManager Navigation;




<PageTitle>Log in</PageTitle>

<h1 class="text-center">Log in</h1>
<div class="login-container">
    <div class="login-box">
        <EditForm Model="user"
            OnValidSubmit="HandleValidSubmit">

            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label for="username">Username</label>
                <InputText id="username" @bind-Value="user.Username" />
            </div>

            <div>
                <label for="password">Password</label>
                <InputText id="password" type="password" @bind-Value="user.Password" />
            </div>

            <button type="submit">Go!</button>
        </EditForm>
    </div>
    <p>Please log into continue or make a new account below:</p>
    <a href="/register" class="register-link">Register</a>
</div>


@code {
    private UserModel user = new UserModel();

    private async Task HandleValidSubmit()
    {
        using var context = DbContextFactory.CreateDbContext();
        var isAuthenticated = await UserService.AuthenticateUserAsync(user.Username,user.Password);
        if (isAuthenticated)
        {
            Navigation.NavigateTo("/landing-page");
        }
        else
        {
            
        }
        await UserService.SaveUserAsync(user);
    }
}